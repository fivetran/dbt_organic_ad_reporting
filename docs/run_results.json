{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.5", "generated_at": "2024-08-20T15:04:48.247800Z", "invocation_id": "4be557f1-9699-4946-affa-374127b8a827", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.093350Z", "completed_at": "2024-08-20T15:04:46.117316Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.122676Z", "completed_at": "2024-08-20T15:04:46.122693Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030382871627807617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_pages_source.stg_facebook_pages__daily_page_metrics_total_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"facebook_pages_daily_page_metrics_total_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__daily_page_metrics_total_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.117541Z", "completed_at": "2024-08-20T15:04:46.126228Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.127032Z", "completed_at": "2024-08-20T15:04:46.127036Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013757944107055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_pages_source.stg_facebook_pages__page_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"facebook_pages_page_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__page_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.114651Z", "completed_at": "2024-08-20T15:04:46.126565Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.127434Z", "completed_at": "2024-08-20T15:04:46.127437Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016572237014770508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_pages_source.stg_facebook_pages__lifetime_post_metrics_total_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"facebook_pages_lifetime_post_metrics_total_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__lifetime_post_metrics_total_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.120378Z", "completed_at": "2024-08-20T15:04:46.126801Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.127779Z", "completed_at": "2024-08-20T15:04:46.127782Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014200925827026367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_pages_source.stg_facebook_pages__post_history_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"facebook_pages_post_history_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__post_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.123980Z", "completed_at": "2024-08-20T15:04:46.128081Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.129105Z", "completed_at": "2024-08-20T15:04:46.129108Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0055999755859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.instagram_business_source.stg_instagram_business__media_history_tmp", "compiled": true, "compiled_code": "\n    \n    \n           \n            \n           \n            \n                \n                \n        \n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"instagram_business_media_history_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.131169Z", "completed_at": "2024-08-20T15:04:46.139679Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.142596Z", "completed_at": "2024-08-20T15:04:46.142602Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013226032257080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.instagram_business_source.stg_instagram_business__media_insights_tmp", "compiled": true, "compiled_code": "\n    \n    \n           \n            \n           \n            \n                \n                \n        \n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"instagram_business_media_insights_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_insights_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.133457Z", "completed_at": "2024-08-20T15:04:46.139896Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.142955Z", "completed_at": "2024-08-20T15:04:46.142959Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013351917266845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.instagram_business_source.stg_instagram_business__user_history_tmp", "compiled": true, "compiled_code": "\n    \n    \n           \n            \n           \n            \n                \n                \n        \n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"instagram_business_user_history_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__user_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.135740Z", "completed_at": "2024-08-20T15:04:46.142387Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.143328Z", "completed_at": "2024-08-20T15:04:46.143332Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013511180877685547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages_source.stg_linkedin_pages__organization_tmp", "compiled": true, "compiled_code": "--depends_on: \"postgres\".\"social_media_rollup_integration_tests_1\".\"linkedin_pages_organization_data\"\n\n    \n    \n           \n            \n                \n                \n           \n            \n        \n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"linkedin_pages_organization_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__organization_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.140082Z", "completed_at": "2024-08-20T15:04:46.143999Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.144992Z", "completed_at": "2024-08-20T15:04:46.144995Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014083147048950195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages_source.stg_linkedin_pages__organization_ugc_post_tmp", "compiled": true, "compiled_code": "\n    \n    \n           \n            \n                \n                \n           \n            \n        \n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"linkedin_pages_organization_ugc_post_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__organization_ugc_post_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.146652Z", "completed_at": "2024-08-20T15:04:46.154068Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.156985Z", "completed_at": "2024-08-20T15:04:46.156990Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012279987335205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages_source.stg_linkedin_pages__post_content_tmp", "compiled": true, "compiled_code": "\n    \n    \n           \n            \n                \n                \n           \n            \n        \n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"linkedin_pages_post_content_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__post_content_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.149259Z", "completed_at": "2024-08-20T15:04:46.156557Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.157395Z", "completed_at": "2024-08-20T15:04:46.157398Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012118816375732422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages_source.stg_linkedin_pages__share_statistic_tmp", "compiled": true, "compiled_code": "\n    \n    \n           \n            \n                \n                \n           \n            \n        \n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"linkedin_pages_share_statistic_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__share_statistic_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.151514Z", "completed_at": "2024-08-20T15:04:46.156779Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.157722Z", "completed_at": "2024-08-20T15:04:46.157725Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01222085952758789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages_source.stg_linkedin_pages__ugc_post_history_tmp", "compiled": true, "compiled_code": "\n    \n    \n           \n            \n                \n                \n           \n            \n        \n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"linkedin_pages_ugc_post_history_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__ugc_post_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.154324Z", "completed_at": "2024-08-20T15:04:46.158309Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.159311Z", "completed_at": "2024-08-20T15:04:46.159313Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010330915451049805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages_source.stg_linkedin_pages__ugc_post_share_statistic_tmp", "compiled": true, "compiled_code": "\n    \n    \n           \n            \n                \n                \n           \n            \n        \n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"linkedin_pages_ugc_post_share_statistic_data\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__ugc_post_share_statistic_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.160913Z", "completed_at": "2024-08-20T15:04:46.171749Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.172468Z", "completed_at": "2024-08-20T15:04:46.172473Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013450860977172852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_organic_source.stg_twitter_organic__account_history_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"account_history\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__account_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.164322Z", "completed_at": "2024-08-20T15:04:46.171978Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.172941Z", "completed_at": "2024-08-20T15:04:46.172944Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013369083404541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_organic_source.stg_twitter_organic__organic_tweet_report_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"organic_tweet_report\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__organic_tweet_report_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.166623Z", "completed_at": "2024-08-20T15:04:46.172271Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.173286Z", "completed_at": "2024-08-20T15:04:46.173289Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013496160507202148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_organic_source.stg_twitter_organic__tweet_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"tweet\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__tweet_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.169279Z", "completed_at": "2024-08-20T15:04:46.173584Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.174658Z", "completed_at": "2024-08-20T15:04:46.174661Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01063084602355957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_organic_source.stg_twitter_organic__twitter_user_history_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1\".\"twitter_user_history\"", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__twitter_user_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.176717Z", "completed_at": "2024-08-20T15:04:46.177848Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.181456Z", "completed_at": "2024-08-20T15:04:46.181461Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0065271854400634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.account_history", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.178064Z", "completed_at": "2024-08-20T15:04:46.179796Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.181815Z", "completed_at": "2024-08-20T15:04:46.181818Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00665283203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.facebook_pages_daily_page_metrics_total_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.180032Z", "completed_at": "2024-08-20T15:04:46.181030Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.182150Z", "completed_at": "2024-08-20T15:04:46.182155Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006788969039916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.facebook_pages_lifetime_post_metrics_total_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.182540Z", "completed_at": "2024-08-20T15:04:46.183614Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.184608Z", "completed_at": "2024-08-20T15:04:46.184613Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008164167404174805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.facebook_pages_page_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.186708Z", "completed_at": "2024-08-20T15:04:46.187815Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.191244Z", "completed_at": "2024-08-20T15:04:46.191248Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006356954574584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.facebook_pages_post_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.188042Z", "completed_at": "2024-08-20T15:04:46.189026Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.191587Z", "completed_at": "2024-08-20T15:04:46.191590Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0064618587493896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.instagram_business_media_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.189231Z", "completed_at": "2024-08-20T15:04:46.190846Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.191905Z", "completed_at": "2024-08-20T15:04:46.191907Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0065610408782958984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.instagram_business_media_insights_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.192214Z", "completed_at": "2024-08-20T15:04:46.193230Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.194150Z", "completed_at": "2024-08-20T15:04:46.194154Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007714033126831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.instagram_business_user_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.196110Z", "completed_at": "2024-08-20T15:04:46.197186Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.199967Z", "completed_at": "2024-08-20T15:04:46.199972Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005541086196899414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.linkedin_pages_organization_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.197395Z", "completed_at": "2024-08-20T15:04:46.198385Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.200346Z", "completed_at": "2024-08-20T15:04:46.200349Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.005689144134521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.linkedin_pages_organization_ugc_post_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.198585Z", "completed_at": "2024-08-20T15:04:46.199561Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.200672Z", "completed_at": "2024-08-20T15:04:46.200675Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.005807161331176758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.linkedin_pages_post_content_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.200977Z", "completed_at": "2024-08-20T15:04:46.201991Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.202877Z", "completed_at": "2024-08-20T15:04:46.202880Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007023811340332031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.linkedin_pages_share_statistic_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.204793Z", "completed_at": "2024-08-20T15:04:46.206550Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.209439Z", "completed_at": "2024-08-20T15:04:46.209444Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006310224533081055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.linkedin_pages_ugc_post_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.206785Z", "completed_at": "2024-08-20T15:04:46.207816Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.209803Z", "completed_at": "2024-08-20T15:04:46.209806Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0064411163330078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.linkedin_pages_ugc_post_share_statistic_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.208072Z", "completed_at": "2024-08-20T15:04:46.209042Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.210115Z", "completed_at": "2024-08-20T15:04:46.210118Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006546974182128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.organic_tweet_report", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.210413Z", "completed_at": "2024-08-20T15:04:46.211387Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.212269Z", "completed_at": "2024-08-20T15:04:46.212273Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007734060287475586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.tweet", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.214234Z", "completed_at": "2024-08-20T15:04:46.215316Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.229661Z", "completed_at": "2024-08-20T15:04:46.229666Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.017121076583862305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.social_media_rollup_integration_tests.twitter_user_history", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.215537Z", "completed_at": "2024-08-20T15:04:46.614758Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.615275Z", "completed_at": "2024-08-20T15:04:46.615279Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.42816591262817383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_pages_source.stg_facebook_pages__daily_page_metrics_total", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__daily_page_metrics_total_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    page_actions_post_reactions_anger_total\n    \n as \n    \n    page_actions_post_reactions_anger_total\n    \n, \n    \n    \n    page_actions_post_reactions_haha_total\n    \n as \n    \n    page_actions_post_reactions_haha_total\n    \n, \n    \n    \n    page_actions_post_reactions_like_total\n    \n as \n    \n    page_actions_post_reactions_like_total\n    \n, \n    \n    \n    page_actions_post_reactions_love_total\n    \n as \n    \n    page_actions_post_reactions_love_total\n    \n, \n    \n    \n    page_actions_post_reactions_sorry_total\n    \n as \n    \n    page_actions_post_reactions_sorry_total\n    \n, \n    \n    \n    page_actions_post_reactions_total\n    \n as \n    \n    page_actions_post_reactions_total\n    \n, \n    \n    \n    page_actions_post_reactions_wow_total\n    \n as \n    \n    page_actions_post_reactions_wow_total\n    \n, \n    \n    \n    page_fan_adds\n    \n as \n    \n    page_fan_adds\n    \n, \n    \n    \n    page_fan_removes\n    \n as \n    \n    page_fan_removes\n    \n, \n    \n    \n    page_fans\n    \n as \n    \n    page_fans\n    \n, \n    \n    \n    page_fans_online_per_day\n    \n as \n    \n    page_fans_online_per_day\n    \n, \n    \n    \n    page_id\n    \n as \n    \n    page_id\n    \n, \n    \n    \n    page_impressions\n    \n as \n    \n    page_impressions\n    \n, \n    \n    \n    page_impressions_nonviral\n    \n as \n    \n    page_impressions_nonviral\n    \n, \n    \n    \n    page_impressions_organic\n    \n as \n    \n    page_impressions_organic\n    \n, \n    \n    \n    page_impressions_paid\n    \n as \n    \n    page_impressions_paid\n    \n, \n    \n    \n    page_impressions_viral\n    \n as \n    \n    page_impressions_viral\n    \n, \n    \n    \n    page_negative_feedback\n    \n as \n    \n    page_negative_feedback\n    \n, \n    \n    \n    page_places_checkin_total\n    \n as \n    \n    page_places_checkin_total\n    \n, \n    \n    \n    page_post_engagements\n    \n as \n    \n    page_post_engagements\n    \n, \n    \n    \n    page_posts_impressions\n    \n as \n    \n    page_posts_impressions\n    \n, \n    \n    \n    page_posts_impressions_nonviral\n    \n as \n    \n    page_posts_impressions_nonviral\n    \n, \n    \n    \n    page_posts_impressions_organic\n    \n as \n    \n    page_posts_impressions_organic\n    \n, \n    \n    \n    page_posts_impressions_paid\n    \n as \n    \n    page_posts_impressions_paid\n    \n, \n    \n    \n    page_posts_impressions_viral\n    \n as \n    \n    page_posts_impressions_viral\n    \n, \n    \n    \n    page_total_actions\n    \n as \n    \n    page_total_actions\n    \n, \n    \n    \n    page_video_complete_views_30_s\n    \n as \n    \n    page_video_complete_views_30_s\n    \n, \n    \n    \n    page_video_complete_views_30_s_autoplayed\n    \n as \n    \n    page_video_complete_views_30_s_autoplayed\n    \n, \n    \n    \n    page_video_complete_views_30_s_click_to_play\n    \n as \n    \n    page_video_complete_views_30_s_click_to_play\n    \n, \n    \n    \n    page_video_complete_views_30_s_organic\n    \n as \n    \n    page_video_complete_views_30_s_organic\n    \n, \n    \n    \n    page_video_complete_views_30_s_paid\n    \n as \n    \n    page_video_complete_views_30_s_paid\n    \n, \n    \n    \n    page_video_complete_views_30_s_repeat_views\n    \n as \n    \n    page_video_complete_views_30_s_repeat_views\n    \n, \n    \n    \n    page_video_repeat_views\n    \n as \n    \n    page_video_repeat_views\n    \n, \n    \n    \n    page_video_view_time\n    \n as \n    \n    page_video_view_time\n    \n, \n    \n    \n    page_video_views\n    \n as \n    \n    page_video_views\n    \n, \n    \n    \n    page_video_views_10_s\n    \n as \n    \n    page_video_views_10_s\n    \n, \n    \n    \n    page_video_views_10_s_autoplayed\n    \n as \n    \n    page_video_views_10_s_autoplayed\n    \n, \n    \n    \n    page_video_views_10_s_click_to_play\n    \n as \n    \n    page_video_views_10_s_click_to_play\n    \n, \n    \n    \n    page_video_views_10_s_organic\n    \n as \n    \n    page_video_views_10_s_organic\n    \n, \n    \n    \n    page_video_views_10_s_paid\n    \n as \n    \n    page_video_views_10_s_paid\n    \n, \n    \n    \n    page_video_views_10_s_repeat\n    \n as \n    \n    page_video_views_10_s_repeat\n    \n, \n    \n    \n    page_video_views_autoplayed\n    \n as \n    \n    page_video_views_autoplayed\n    \n, \n    \n    \n    page_video_views_click_to_play\n    \n as \n    \n    page_video_views_click_to_play\n    \n, \n    \n    \n    page_video_views_organic\n    \n as \n    \n    page_video_views_organic\n    \n, \n    \n    \n    page_video_views_paid\n    \n as \n    \n    page_video_views_paid\n    \n, \n    \n    \n    page_views_total\n    \n as \n    \n    page_views_total\n    \n\n\n        \n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        date as date_day,\n        page_id,\n        page_actions_post_reactions_anger_total as actions_post_reactions_anger_total,\n        page_actions_post_reactions_haha_total as actions_post_reactions_haha_total,\n        page_actions_post_reactions_like_total as actions_post_reactions_like_total,\n        page_actions_post_reactions_love_total as actions_post_reactions_love_total,\n        page_actions_post_reactions_sorry_total as actions_post_reactions_sorry_total,\n        page_actions_post_reactions_wow_total as actions_post_reactions_wow_total,\n        coalesce(page_actions_post_reactions_total,(page_actions_post_reactions_anger_total + page_actions_post_reactions_haha_total + page_actions_post_reactions_like_total + page_actions_post_reactions_love_total + page_actions_post_reactions_sorry_total + page_actions_post_reactions_wow_total)) as actions_post_reactions_total,\n        page_fan_adds as fan_adds,\n        page_fan_removes as fan_removes,\n        page_fans as fans,\n        page_fans_online_per_day as fans_online_per_day,\n        page_impressions as impressions,\n        page_impressions_nonviral as impressions_nonviral,\n        page_impressions_organic as impressions_organic,\n        page_impressions_paid as impressions_paid,\n        page_impressions_viral as impressions_viral,\n        page_negative_feedback as negative_feedback,\n        page_places_checkin_total as places_checkin_total,\n        page_post_engagements as post_engagements,\n        page_posts_impressions as posts_impressions,\n        page_posts_impressions_nonviral as posts_impressions_nonviral,\n        page_posts_impressions_organic as posts_impressions_organic,\n        page_posts_impressions_paid as posts_impressions_paid,\n        page_posts_impressions_viral as posts_impressions_viral,\n        page_total_actions as total_actions,\n        page_video_complete_views_30_s as video_complete_views_30s,\n        page_video_complete_views_30_s_autoplayed as video_complete_views_30s_autoplayed,\n        page_video_complete_views_30_s_click_to_play as video_complete_views_30s_click_to_play,\n        page_video_complete_views_30_s_organic as video_complete_views_30s_organic,\n        page_video_complete_views_30_s_paid as video_complete_views_30s_paid,\n        page_video_complete_views_30_s_repeat_views as video_complete_views_30s_repeat_views,\n        page_video_repeat_views as video_repeat_views,\n        page_video_view_time / 1000.0 as video_view_time,\n        page_video_views as video_views,\n        page_video_views_10_s as video_views_10s,\n        page_video_views_10_s_autoplayed as video_views_10s_autoplayed,\n        page_video_views_10_s_click_to_play as video_views_10s_click_to_play,\n        page_video_views_10_s_organic as video_views_10s_organic,\n        page_video_views_10_s_paid as video_views_10s_paid,\n        page_video_views_10_s_repeat as video_views_10s_repeat,\n        page_video_views_autoplayed as video_views_autoplayed,\n        page_video_views_click_to_play as video_views_click_to_play,\n        page_video_views_organic as video_views_organic,\n        page_video_views_paid as video_views_paid,\n        page_views_total as views_total,\n        source_relation\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__daily_page_metrics_total\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.230388Z", "completed_at": "2024-08-20T15:04:46.615478Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.615940Z", "completed_at": "2024-08-20T15:04:46.615943Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.427340030670166, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_pages_source.stg_facebook_pages__page", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__page_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    affiliation\n    \n as \n    \n    affiliation\n    \n, \n    \n    \n    app_id\n    \n as \n    \n    app_id\n    \n, \n    \n    \n    artists_we_like\n    \n as \n    \n    artists_we_like\n    \n, \n    \n    \n    attire\n    \n as \n    \n    attire\n    \n, \n    \n    \n    awards\n    \n as \n    \n    awards\n    \n, \n    \n    \n    band_interests\n    \n as \n    \n    band_interests\n    \n, \n    \n    \n    band_members\n    \n as \n    \n    band_members\n    \n, \n    \n    \n    bio\n    \n as \n    \n    bio\n    \n, \n    \n    \n    birthday\n    \n as \n    \n    birthday\n    \n, \n    \n    \n    booking_agent\n    \n as \n    \n    booking_agent\n    \n, \n    \n    \n    built\n    \n as \n    \n    built\n    \n, \n    \n    \n    can_checkin\n    \n as \n    \n    can_checkin\n    \n, \n    \n    \n    can_post\n    \n as \n    \n    can_post\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    category_list\n    \n as \n    \n    category_list\n    \n, \n    \n    \n    checkins\n    \n as \n    \n    checkins\n    \n, \n    \n    \n    company_overview\n    \n as \n    \n    company_overview\n    \n, \n    \n    \n    culinary_team\n    \n as \n    \n    culinary_team\n    \n, \n    \n    \n    current_location\n    \n as \n    \n    current_location\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    directed_by\n    \n as \n    \n    directed_by\n    \n, \n    \n    \n    display_subtext\n    \n as \n    \n    display_subtext\n    \n, \n    \n    \n    emails\n    \n as \n    \n    emails\n    \n, \n    \n    \n    fan_count\n    \n as \n    \n    fan_count\n    \n, \n    \n    \n    features\n    \n as \n    \n    features\n    \n, \n    \n    \n    food_styles\n    \n as \n    \n    food_styles\n    \n, \n    \n    \n    founded\n    \n as \n    \n    founded\n    \n, \n    \n    \n    general_info\n    \n as \n    \n    general_info\n    \n, \n    \n    \n    general_manager\n    \n as \n    \n    general_manager\n    \n, \n    \n    \n    genre\n    \n as \n    \n    genre\n    \n, \n    \n    \n    global_brand_page_name\n    \n as \n    \n    global_brand_page_name\n    \n, \n    \n    \n    has_added_app\n    \n as \n    \n    has_added_app\n    \n, \n    \n    \n    has_transitioned_to_new_page_experience\n    \n as \n    \n    has_transitioned_to_new_page_experience\n    \n, \n    \n    \n    has_whatsapp_number\n    \n as \n    \n    has_whatsapp_number\n    \n, \n    \n    \n    hometown\n    \n as \n    \n    hometown\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    impressum\n    \n as \n    \n    impressum\n    \n, \n    \n    \n    influences\n    \n as \n    \n    influences\n    \n, \n    \n    \n    is_always_open\n    \n as \n    \n    is_always_open\n    \n, \n    \n    \n    is_chain\n    \n as \n    \n    is_chain\n    \n, \n    \n    \n    is_community_page\n    \n as \n    \n    is_community_page\n    \n, \n    \n    \n    is_eligible_for_branded_content\n    \n as \n    \n    is_eligible_for_branded_content\n    \n, \n    \n    \n    is_messenger_bot_get_started_enabled\n    \n as \n    \n    is_messenger_bot_get_started_enabled\n    \n, \n    \n    \n    is_messenger_platform_bot\n    \n as \n    \n    is_messenger_platform_bot\n    \n, \n    \n    \n    is_owned\n    \n as \n    \n    is_owned\n    \n, \n    \n    \n    is_permanently_closed\n    \n as \n    \n    is_permanently_closed\n    \n, \n    \n    \n    is_published\n    \n as \n    \n    is_published\n    \n, \n    \n    \n    is_unclaimed\n    \n as \n    \n    is_unclaimed\n    \n, \n    \n    \n    members\n    \n as \n    \n    members\n    \n, \n    \n    \n    mission\n    \n as \n    \n    mission\n    \n, \n    \n    \n    mpg\n    \n as \n    \n    mpg\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    network\n    \n as \n    \n    network\n    \n, \n    \n    \n    new_like_count\n    \n as \n    \n    new_like_count\n    \n, \n    \n    \n    overall_star_rating\n    \n as \n    \n    overall_star_rating\n    \n, \n    \n    \n    personal_info\n    \n as \n    \n    personal_info\n    \n, \n    \n    \n    personal_interests\n    \n as \n    \n    personal_interests\n    \n, \n    \n    \n    pharma_safety_info\n    \n as \n    \n    pharma_safety_info\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    place_type\n    \n as \n    \n    place_type\n    \n, \n    \n    \n    plot_outline\n    \n as \n    \n    plot_outline\n    \n, \n    \n    \n    press_contact\n    \n as \n    \n    press_contact\n    \n, \n    \n    \n    price_range\n    \n as \n    \n    price_range\n    \n, \n    \n    \n    produced_by\n    \n as \n    \n    produced_by\n    \n, \n    \n    \n    products\n    \n as \n    \n    products\n    \n, \n    \n    \n    promotion_eligible\n    \n as \n    \n    promotion_eligible\n    \n, \n    \n    \n    promotion_ineligible_reason\n    \n as \n    \n    promotion_ineligible_reason\n    \n, \n    \n    \n    public_transit\n    \n as \n    \n    public_transit\n    \n, \n    \n    \n    rating_count\n    \n as \n    \n    rating_count\n    \n, \n    \n    \n    record_label\n    \n as \n    \n    record_label\n    \n, \n    \n    \n    release_date\n    \n as \n    \n    release_date\n    \n, \n    \n    \n    schedule\n    \n as \n    \n    schedule\n    \n, \n    \n    \n    screenplay_by\n    \n as \n    \n    screenplay_by\n    \n, \n    \n    \n    season\n    \n as \n    \n    season\n    \n, \n    \n    \n    single_line_address\n    \n as \n    \n    single_line_address\n    \n, \n    \n    \n    starring\n    \n as \n    \n    starring\n    \n, \n    \n    \n    store_number\n    \n as \n    \n    store_number\n    \n, \n    \n    \n    studio\n    \n as \n    \n    studio\n    \n, \n    \n    \n    talking_about_count\n    \n as \n    \n    talking_about_count\n    \n, \n    \n    \n    username\n    \n as \n    \n    username\n    \n, \n    \n    \n    website\n    \n as \n    \n    website\n    \n, \n    \n    \n    were_here_count\n    \n as \n    \n    were_here_count\n    \n, \n    \n    \n    whatsapp_number\n    \n as \n    \n    whatsapp_number\n    \n, \n    \n    \n    written_by\n    \n as \n    \n    written_by\n    \n\n\n\n                \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        _fivetran_synced,\n        affiliation,\n        app_id,\n        artists_we_like,\n        attire,\n        awards,\n        band_interests,\n        band_members,\n        bio,\n        birthday,\n        booking_agent,\n        built,\n        can_checkin,\n        can_post,\n        category,\n        category_list,\n        checkins,\n        company_overview,\n        culinary_team,\n        current_location,\n        description as page_description,\n        directed_by,\n        display_subtext,\n        emails,\n        fan_count,\n        features,\n        food_styles,\n        founded,\n        general_info,\n        general_manager,\n        genre,\n        global_brand_page_name,\n        has_added_app,\n        has_transitioned_to_new_page_experience,\n        has_whatsapp_number,\n        hometown,\n        id as page_id,\n        impressum,\n        influences,\n        is_always_open,\n        is_chain,\n        is_community_page,\n        is_eligible_for_branded_content,\n        is_messenger_bot_get_started_enabled,\n        is_messenger_platform_bot,\n        is_owned,\n        is_permanently_closed,\n        is_published,\n        is_unclaimed,\n        members,\n        mission,\n        mpg,\n        name as page_name,\n        network,\n        new_like_count,\n        overall_star_rating,\n        personal_info,\n        personal_interests,\n        pharma_safety_info,\n        phone,\n        place_type,\n        plot_outline,\n        press_contact,\n        price_range,\n        produced_by,\n        products,\n        promotion_eligible,\n        promotion_ineligible_reason,\n        public_transit,\n        rating_count,\n        record_label,\n        release_date,\n        schedule,\n        screenplay_by,\n        season,\n        single_line_address,\n        starring,\n        store_number,\n        studio,\n        talking_about_count,\n        username,\n        website,\n        were_here_count,\n        whatsapp_number,\n        written_by,\n        source_relation\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__page\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.266120Z", "completed_at": "2024-08-20T15:04:46.614494Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.614984Z", "completed_at": "2024-08-20T15:04:46.614992Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.37686610221862793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_pages_source.stg_facebook_pages__post_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__post_history_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    allowed_advertising_objects\n    \n as \n    \n    allowed_advertising_objects\n    \n, \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_eligible_for_promotion\n    \n as \n    \n    is_eligible_for_promotion\n    \n, \n    \n    \n    is_hidden\n    \n as \n    \n    is_hidden\n    \n, \n    \n    \n    is_instagram_eligible\n    \n as \n    \n    is_instagram_eligible\n    \n, \n    \n    \n    is_published\n    \n as \n    \n    is_published\n    \n, \n    \n    \n    message\n    \n as \n    \n    message\n    \n, \n    \n    \n    page_id\n    \n as \n    \n    page_id\n    \n, \n    \n    \n    parent_id\n    \n as \n    \n    parent_id\n    \n, \n    \n    \n    privacy_allow\n    \n as \n    \n    privacy_allow\n    \n, \n    \n    \n    privacy_deny\n    \n as \n    \n    privacy_deny\n    \n, \n    \n    \n    privacy_description\n    \n as \n    \n    privacy_description\n    \n, \n    \n    \n    privacy_friends\n    \n as \n    \n    privacy_friends\n    \n, \n    \n    \n    privacy_value\n    \n as \n    \n    privacy_value\n    \n, \n    \n    \n    promotable_id\n    \n as \n    \n    promotable_id\n    \n, \n    \n    \n    share_count\n    \n as \n    \n    share_count\n    \n, \n    \n    \n    status_type\n    \n as \n    \n    status_type\n    \n, \n    \n    \n    updated_time\n    \n as \n    \n    updated_time\n    \n\n\n\n                \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        allowed_advertising_objects,\n        created_time as created_timestamp,\n        id as post_id,\n        is_eligible_for_promotion,\n        is_hidden,\n        is_instagram_eligible,\n        is_published,\n        message as post_message,\n        page_id,\n        parent_id,\n        privacy_allow,\n        privacy_deny,\n        privacy_description,\n        privacy_friends,\n        privacy_value,\n        promotable_id,\n        share_count,\n        status_type,\n        updated_time as updated_timestamp,\n        'https://facebook.com/' || \n\n  \n    \n\n    split_part(\n        id,\n        '_',\n        1\n        )\n\n\n  \n\n || '/posts/' || \n\n  \n    \n\n    split_part(\n        id,\n        '_',\n        2\n        )\n\n\n  \n\n as post_url,\n        source_relation\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__post_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.225668Z", "completed_at": "2024-08-20T15:04:46.615650Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.616139Z", "completed_at": "2024-08-20T15:04:46.616142Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.4295072555541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_pages_source.stg_facebook_pages__lifetime_post_metrics_total", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__lifetime_post_metrics_total_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    post_clicks\n    \n as \n    \n    post_clicks\n    \n, \n    \n    \n    post_engaged_fan\n    \n as \n    \n    post_engaged_fan\n    \n, \n    \n    \n    post_engaged_users\n    \n as \n    \n    post_engaged_users\n    \n, \n    \n    \n    post_id\n    \n as \n    \n    post_id\n    \n, \n    \n    \n    post_impressions\n    \n as \n    \n    post_impressions\n    \n, \n    \n    \n    post_impressions_fan\n    \n as \n    \n    post_impressions_fan\n    \n, \n    \n    \n    post_impressions_nonviral\n    \n as \n    \n    post_impressions_nonviral\n    \n, \n    \n    \n    post_impressions_organic\n    \n as \n    \n    post_impressions_organic\n    \n, \n    \n    \n    post_impressions_paid\n    \n as \n    \n    post_impressions_paid\n    \n, \n    \n    \n    post_impressions_viral\n    \n as \n    \n    post_impressions_viral\n    \n, \n    \n    \n    post_negative_feedback\n    \n as \n    \n    post_negative_feedback\n    \n, \n    \n    \n    post_reactions_anger_total\n    \n as \n    \n    post_reactions_anger_total\n    \n, \n    \n    \n    post_reactions_haha_total\n    \n as \n    \n    post_reactions_haha_total\n    \n, \n    \n    \n    post_reactions_like_total\n    \n as \n    \n    post_reactions_like_total\n    \n, \n    \n    \n    post_reactions_love_total\n    \n as \n    \n    post_reactions_love_total\n    \n, \n    \n    \n    post_reactions_sorry_total\n    \n as \n    \n    post_reactions_sorry_total\n    \n, \n    \n    \n    post_reactions_wow_total\n    \n as \n    \n    post_reactions_wow_total\n    \n, \n    \n    \n    post_video_avg_time_watched\n    \n as \n    \n    post_video_avg_time_watched\n    \n, \n    \n    \n    post_video_complete_views_30_s_autoplayed\n    \n as \n    \n    post_video_complete_views_30_s_autoplayed\n    \n, \n    \n    \n    post_video_complete_views_30_s_clicked_to_play\n    \n as \n    \n    post_video_complete_views_30_s_clicked_to_play\n    \n, \n    \n    \n    post_video_complete_views_30_s_organic\n    \n as \n    \n    post_video_complete_views_30_s_organic\n    \n, \n    \n    \n    post_video_complete_views_30_s_paid\n    \n as \n    \n    post_video_complete_views_30_s_paid\n    \n, \n    \n    \n    post_video_complete_views_organic\n    \n as \n    \n    post_video_complete_views_organic\n    \n, \n    \n    \n    post_video_complete_views_paid\n    \n as \n    \n    post_video_complete_views_paid\n    \n, \n    \n    \n    post_video_length\n    \n as \n    \n    post_video_length\n    \n, \n    \n    \n    post_video_view_time\n    \n as \n    \n    post_video_view_time\n    \n, \n    \n    \n    post_video_view_time_organic\n    \n as \n    \n    post_video_view_time_organic\n    \n, \n    \n    \n    post_video_views\n    \n as \n    \n    post_video_views\n    \n, \n    \n    \n    post_video_views_10_s\n    \n as \n    \n    post_video_views_10_s\n    \n, \n    \n    \n    post_video_views_10_s_autoplayed\n    \n as \n    \n    post_video_views_10_s_autoplayed\n    \n, \n    \n    \n    post_video_views_10_s_clicked_to_play\n    \n as \n    \n    post_video_views_10_s_clicked_to_play\n    \n, \n    \n    \n    post_video_views_10_s_organic\n    \n as \n    \n    post_video_views_10_s_organic\n    \n, \n    \n    \n    post_video_views_10_s_paid\n    \n as \n    \n    post_video_views_10_s_paid\n    \n, \n    \n    \n    post_video_views_10_s_sound_on\n    \n as \n    \n    post_video_views_10_s_sound_on\n    \n, \n    \n    \n    post_video_views_15_s\n    \n as \n    \n    post_video_views_15_s\n    \n, \n    \n    \n    post_video_views_autoplayed\n    \n as \n    \n    post_video_views_autoplayed\n    \n, \n    \n    \n    post_video_views_clicked_to_play\n    \n as \n    \n    post_video_views_clicked_to_play\n    \n, \n    \n    \n    post_video_views_organic\n    \n as \n    \n    post_video_views_organic\n    \n, \n    \n    \n    post_video_views_paid\n    \n as \n    \n    post_video_views_paid\n    \n, \n    \n    \n    post_video_views_sound_on\n    \n as \n    \n    post_video_views_sound_on\n    \n\n\n\n                \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_synced,\n        date as date_day,\n        post_id,\n        post_clicks as clicks,\n        post_impressions as impressions,\n        post_impressions_fan as impressions_fan,\n        post_impressions_nonviral as impressions_nonviral,\n        post_impressions_organic as impressions_organic,\n        post_impressions_paid as impressions_paid,\n        post_impressions_viral as impressions_viral,\n        post_negative_feedback as negative_feedback,\n        post_reactions_anger_total as reactions_anger_total,\n        post_reactions_haha_total as reactions_haha_total,\n        post_reactions_like_total as reactions_like_total,\n        post_reactions_love_total as reactions_love_total,\n        post_reactions_sorry_total as reactions_sorry_total,\n        post_reactions_wow_total as reactions_wow_total,\n        post_video_avg_time_watched / 1000.0 as video_avg_time_watched,\n        post_video_complete_views_30_s_autoplayed as video_complete_views_30s_autoplayed,\n        post_video_complete_views_30_s_clicked_to_play as video_complete_views_30s_clicked_to_play,\n        post_video_complete_views_30_s_organic as video_complete_views_30s_organic,\n        post_video_complete_views_30_s_paid as video_complete_views_30s_paid,\n        post_video_complete_views_organic as video_complete_views_organic,\n        post_video_complete_views_paid as video_complete_views_paid,\n        post_video_length / 1000.0  as video_length,\n        post_video_view_time / 1000.0 as video_view_time,\n        post_video_view_time_organic / 1000.0 as video_view_time_organic,\n        post_video_views as video_views,\n        post_video_views_10_s as video_views_10s,\n        post_video_views_10_s_autoplayed as video_views_10s_autoplayed,\n        post_video_views_10_s_clicked_to_play as video_views_10s_clicked_to_play,\n        post_video_views_10_s_organic as video_views_10s_organic,\n        post_video_views_10_s_paid as video_views_10_s_paid,\n        post_video_views_10_s_sound_on as video_views_10s_sound_on,\n        post_video_views_15_s as video_views_15s,\n        post_video_views_autoplayed as video_views_autoplayed,\n        post_video_views_clicked_to_play as video_views_clicked_to_play,\n        post_video_views_organic as video_views_organic,\n        post_video_views_paid as video_views_paid,\n        post_video_views_sound_on as video_views_sound_on,\n        source_relation\n    from fields\n),\n\nis_most_recent as (\n\n    select \n        *,\n        row_number() over (partition by post_id, source_relation order by date_day desc) = 1 as is_most_recent_record\n    from final\n\n)\n\nselect * from is_most_recent", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__lifetime_post_metrics_total\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.645005Z", "completed_at": "2024-08-20T15:04:46.901225Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.901536Z", "completed_at": "2024-08-20T15:04:46.901545Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.28884196281433105, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.instagram_business_source.stg_instagram_business__media_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_history_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    caption\n    \n as \n    \n    caption\n    \n, \n    \n    \n    carousel_album_id\n    \n as \n    \n    carousel_album_id\n    \n, \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    ig_id\n    \n as \n    \n    ig_id\n    \n, \n    \n    \n    is_comment_enabled\n    \n as \n    \n    is_comment_enabled\n    \n, \n    \n    \n    is_story\n    \n as \n    \n    is_story\n    \n, \n    \n    \n    media_type\n    \n as \n    \n    media_type\n    \n, \n    \n    \n    media_url\n    \n as \n    \n    media_url\n    \n, \n    \n    \n    permalink\n    \n as \n    \n    permalink\n    \n, \n    \n    \n    shortcode\n    \n as \n    \n    shortcode\n    \n, \n    \n    \n    thumbnail_url\n    \n as \n    \n    thumbnail_url\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    username\n    \n as \n    \n    username\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        _fivetran_synced,\n        caption as post_caption,\n        carousel_album_id,\n        created_time as created_timestamp,\n        id as post_id,\n        ig_id,\n        is_comment_enabled,\n        is_story,\n        media_type,\n        media_url,\n        permalink as post_url,\n        shortcode,\n        thumbnail_url,\n        user_id,\n        username,\n        source_relation\n    from fields\n),\n\nis_most_recent as (\n\n    select \n        *,\n        row_number() over (partition by post_id, source_relation order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from final\n\n)\n\nselect * from is_most_recent", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.657405Z", "completed_at": "2024-08-20T15:04:46.901928Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.902170Z", "completed_at": "2024-08-20T15:04:46.902173Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.29148316383361816, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages_source.stg_linkedin_pages__organization", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__organization_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    cover_photo_v_2_crop_info_height\n    \n as \n    \n    cover_photo_v_2_crop_info_height\n    \n, \n    \n    \n    cover_photo_v_2_crop_info_width\n    \n as \n    \n    cover_photo_v_2_crop_info_width\n    \n, \n    \n    \n    cover_photo_v_2_crop_info_x\n    \n as \n    \n    cover_photo_v_2_crop_info_x\n    \n, \n    \n    \n    cover_photo_v_2_crop_info_y\n    \n as \n    \n    cover_photo_v_2_crop_info_y\n    \n, \n    \n    \n    cover_photo_v_2_cropped\n    \n as \n    \n    cover_photo_v_2_cropped\n    \n, \n    \n    \n    cover_photo_v_2_original\n    \n as \n    \n    cover_photo_v_2_original\n    \n, \n    \n    \n    default_locale_country\n    \n as \n    \n    default_locale_country\n    \n, \n    \n    \n    default_locale_language\n    \n as \n    \n    default_locale_language\n    \n, \n    \n    \n    description_localized\n    \n as \n    \n    description_localized\n    \n, \n    \n    \n    description_preferred_locale_country\n    \n as \n    \n    description_preferred_locale_country\n    \n, \n    \n    \n    description_preferred_locale_language\n    \n as \n    \n    description_preferred_locale_language\n    \n, \n    \n    \n    founded_on_day\n    \n as \n    \n    founded_on_day\n    \n, \n    \n    \n    founded_on_month\n    \n as \n    \n    founded_on_month\n    \n, \n    \n    \n    founded_on_year\n    \n as \n    \n    founded_on_year\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    localized_description\n    \n as \n    \n    localized_description\n    \n, \n    \n    \n    localized_name\n    \n as \n    \n    localized_name\n    \n, \n    \n    \n    localized_website\n    \n as \n    \n    localized_website\n    \n, \n    \n    \n    logo_v_2_crop_info_height\n    \n as \n    \n    logo_v_2_crop_info_height\n    \n, \n    \n    \n    logo_v_2_crop_info_width\n    \n as \n    \n    logo_v_2_crop_info_width\n    \n, \n    \n    \n    logo_v_2_crop_info_x\n    \n as \n    \n    logo_v_2_crop_info_x\n    \n, \n    \n    \n    logo_v_2_crop_info_y\n    \n as \n    \n    logo_v_2_crop_info_y\n    \n, \n    \n    \n    logo_v_2_cropped\n    \n as \n    \n    logo_v_2_cropped\n    \n, \n    \n    \n    logo_v_2_original\n    \n as \n    \n    logo_v_2_original\n    \n, \n    \n    \n    name_localized\n    \n as \n    \n    name_localized\n    \n, \n    \n    \n    name_preferred_locale_country\n    \n as \n    \n    name_preferred_locale_country\n    \n, \n    \n    \n    name_preferred_locale_language\n    \n as \n    \n    name_preferred_locale_language\n    \n, \n    \n    \n    organization_status\n    \n as \n    \n    organization_status\n    \n, \n    \n    \n    organization_type\n    \n as \n    \n    organization_type\n    \n, \n    \n    \n    overview_photo_v_2_crop_info_height\n    \n as \n    \n    overview_photo_v_2_crop_info_height\n    \n, \n    \n    \n    overview_photo_v_2_crop_info_width\n    \n as \n    \n    overview_photo_v_2_crop_info_width\n    \n, \n    \n    \n    overview_photo_v_2_crop_info_x\n    \n as \n    \n    overview_photo_v_2_crop_info_x\n    \n, \n    \n    \n    overview_photo_v_2_crop_info_y\n    \n as \n    \n    overview_photo_v_2_crop_info_y\n    \n, \n    \n    \n    overview_photo_v_2_cropped\n    \n as \n    \n    overview_photo_v_2_cropped\n    \n, \n    \n    \n    overview_photo_v_2_original\n    \n as \n    \n    overview_photo_v_2_original\n    \n, \n    \n    \n    parent_relationship_parent_id\n    \n as \n    \n    parent_relationship_parent_id\n    \n, \n    \n    \n    parent_relationship_status\n    \n as \n    \n    parent_relationship_status\n    \n, \n    \n    \n    parent_relationship_type\n    \n as \n    \n    parent_relationship_type\n    \n, \n    \n    \n    primary_organization_type\n    \n as \n    \n    primary_organization_type\n    \n, \n    \n    \n    school_attributes_hierarchy_classification\n    \n as \n    \n    school_attributes_hierarchy_classification\n    \n, \n    \n    \n    school_attributes_legacy_school\n    \n as \n    \n    school_attributes_legacy_school\n    \n, \n    \n    \n    school_attributes_type\n    \n as \n    \n    school_attributes_type\n    \n, \n    \n    \n    school_attributes_year_level\n    \n as \n    \n    school_attributes_year_level\n    \n, \n    \n    \n    staff_count_range\n    \n as \n    \n    staff_count_range\n    \n, \n    \n    \n    vanity_name\n    \n as \n    \n    vanity_name\n    \n, \n    \n    \n    version_tag\n    \n as \n    \n    version_tag\n    \n, \n    \n    \n    website_localized\n    \n as \n    \n    website_localized\n    \n, \n    \n    \n    website_preferred_locale_country\n    \n as \n    \n    website_preferred_locale_country\n    \n, \n    \n    \n    website_preferred_locale_language\n    \n as \n    \n    website_preferred_locale_language\n    \n\n\n\n        \n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as organization_id,\n        localized_name as organization_name,\n        source_relation\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__organization\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.653191Z", "completed_at": "2024-08-20T15:04:46.936023Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.937027Z", "completed_at": "2024-08-20T15:04:46.937030Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3176722526550293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.instagram_business_source.stg_instagram_business__user_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__user_history_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    followers_count\n    \n as \n    \n    followers_count\n    \n, \n    \n    \n    follows_count\n    \n as \n    \n    follows_count\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    ig_id\n    \n as \n    \n    ig_id\n    \n, \n    \n    \n    media_count\n    \n as \n    \n    media_count\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    username\n    \n as \n    \n    username\n    \n, \n    \n    \n    website\n    \n as \n    \n    website\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        _fivetran_synced,\n        followers_count,\n        follows_count,\n        id as user_id,\n        ig_id,\n        media_count,\n        name as account_name,\n        username,\n        website,\n        source_relation\n    from fields\n),\n\nis_most_recent as (\n\n    select \n        *,\n        row_number() over (partition by user_id, source_relation order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from final\n\n)\n\nselect * from is_most_recent", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__user_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.649264Z", "completed_at": "2024-08-20T15:04:46.937520Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:46.938323Z", "completed_at": "2024-08-20T15:04:46.938327Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.32370615005493164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.instagram_business_source.stg_instagram_business__media_insights", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_insights_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    carousel_album_engagement\n    \n as \n    \n    carousel_album_engagement\n    \n, \n    \n    \n    carousel_album_impressions\n    \n as \n    \n    carousel_album_impressions\n    \n, \n    \n    \n    carousel_album_reach\n    \n as \n    \n    carousel_album_reach\n    \n, \n    \n    \n    carousel_album_saved\n    \n as \n    \n    carousel_album_saved\n    \n, \n    \n    \n    carousel_album_video_views\n    \n as \n    \n    carousel_album_video_views\n    \n, \n    \n    \n    comment_count\n    \n as \n    \n    comment_count\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    like_count\n    \n as \n    \n    like_count\n    \n, \n    \n    \n    story_exits\n    \n as \n    \n    story_exits\n    \n, \n    \n    \n    story_impressions\n    \n as \n    \n    story_impressions\n    \n, \n    \n    \n    story_reach\n    \n as \n    \n    story_reach\n    \n, \n    \n    \n    story_replies\n    \n as \n    \n    story_replies\n    \n, \n    \n    \n    story_taps_back\n    \n as \n    \n    story_taps_back\n    \n, \n    \n    \n    story_taps_forward\n    \n as \n    \n    story_taps_forward\n    \n, \n    \n    \n    video_photo_engagement\n    \n as \n    \n    video_photo_engagement\n    \n, \n    \n    \n    video_photo_impressions\n    \n as \n    \n    video_photo_impressions\n    \n, \n    \n    \n    video_photo_reach\n    \n as \n    \n    video_photo_reach\n    \n, \n    \n    \n    video_photo_saved\n    \n as \n    \n    video_photo_saved\n    \n, \n    \n    \n    video_views\n    \n as \n    \n    video_views\n    \n, \n    cast(null as integer) as \n    \n    reel_comments\n    \n , \n    cast(null as integer) as \n    \n    reel_likes\n    \n , \n    cast(null as integer) as \n    \n    reel_plays\n    \n , \n    cast(null as integer) as \n    \n    reel_reach\n    \n , \n    cast(null as integer) as \n    \n    reel_shares\n    \n , \n    cast(null as integer) as \n    \n    reel_total_interactions\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        _fivetran_synced,\n        carousel_album_engagement,\n        carousel_album_impressions,\n        carousel_album_reach,\n        carousel_album_saved,\n        carousel_album_video_views,\n        comment_count,\n        id as post_id,\n        like_count,\n        story_exits,\n        story_impressions,\n        story_reach,\n        story_replies,\n        story_taps_back,\n        story_taps_forward,\n        video_photo_engagement,\n        video_photo_impressions,\n        video_photo_reach,\n        video_photo_saved,\n        video_views,\n        reel_comments,\n        reel_likes,\n        reel_plays,\n        reel_reach,\n        reel_shares,\n        reel_total_interactions,\n        source_relation\n    from fields\n),\n\nis_most_recent as (\n\n    select \n        *,\n        row_number() over (partition by post_id, source_relation order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from final\n\n)\n\nselect * from is_most_recent", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_insights\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.963023Z", "completed_at": "2024-08-20T15:04:47.172087Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.172313Z", "completed_at": "2024-08-20T15:04:47.172320Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.23084712028503418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages_source.stg_linkedin_pages__share_statistic", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__share_statistic_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _organization_entity_urn\n    \n as \n    \n    _organization_entity_urn\n    \n, \n    \n    \n    _share_entity_urn\n    \n as \n    \n    _share_entity_urn\n    \n, \n    \n    \n    click_count\n    \n as \n    \n    click_count\n    \n, \n    \n    \n    comment_count\n    \n as \n    \n    comment_count\n    \n, \n    \n    \n    engagement\n    \n as \n    \n    engagement\n    \n, \n    \n    \n    impression_count\n    \n as \n    \n    impression_count\n    \n, \n    \n    \n    like_count\n    \n as \n    \n    like_count\n    \n, \n    \n    \n    share_count\n    \n as \n    \n    share_count\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n    \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id as share_statistic_id,\n        _fivetran_synced,\n        _organization_entity_urn as organization_entity_urn,\n        _share_entity_urn as share_entity_urn,\n        click_count,\n        comment_count,\n        engagement,\n        impression_count,\n        like_count,\n        share_count,\n        source_relation\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__share_statistic\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.939017Z", "completed_at": "2024-08-20T15:04:47.176442Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.176739Z", "completed_at": "2024-08-20T15:04:47.176744Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2637639045715332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages_source.stg_linkedin_pages__organization_ugc_post", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__organization_ugc_post_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as integer) as \n    \n    organization_id\n    \n , \n    \n    \n    ugc_post_id\n    \n as \n    \n    ugc_post_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        organization_id,\n\n        case\n            when lower(ugc_post_id) like '%urn:li:share:%' \n                then replace(ugc_post_id, 'urn:li:share:', '')\n            when lower(ugc_post_id) like '%urn:li:ugcpost:%'\n                then replace(lower(ugc_post_id), 'urn:li:ugcpost:', '')\n            else ugc_post_id\n        end as ugc_post_id,\n\n        source_relation\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__organization_ugc_post\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.943128Z", "completed_at": "2024-08-20T15:04:47.188173Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.188392Z", "completed_at": "2024-08-20T15:04:47.188397Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.2781798839569092, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages_source.stg_linkedin_pages__post_content", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__post_content_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    post_id\n    \n as \n    \n    post_id\n    \n, \n    \n    \n    article_description\n    \n as \n    \n    article_description\n    \n, \n    \n    \n    article_source\n    \n as \n    \n    article_source\n    \n, \n    \n    \n    article_thumbnail\n    \n as \n    \n    article_thumbnail\n    \n, \n    \n    \n    article_thumbnail_alt_text\n    \n as \n    \n    article_thumbnail_alt_text\n    \n, \n    \n    \n    article_title\n    \n as \n    \n    article_title\n    \n, \n    \n    \n    carousel_id\n    \n as \n    \n    carousel_id\n    \n, \n    \n    \n    media_alt_text\n    \n as \n    \n    media_alt_text\n    \n, \n    \n    \n    media_id\n    \n as \n    \n    media_id\n    \n, \n    \n    \n    media_title\n    \n as \n    \n    media_title\n    \n, \n    \n    \n    multi_image_alt_text\n    \n as \n    \n    multi_image_alt_text\n    \n, \n    \n    \n    poll_question\n    \n as \n    \n    poll_question\n    \n, \n    \n    \n    poll_settings_duration\n    \n as \n    \n    poll_settings_duration\n    \n, \n    \n    \n    poll_settings_is_voter_visible_to_author\n    \n as \n    \n    poll_settings_is_voter_visible_to_author\n    \n, \n    \n    \n    poll_settings_vote_selection_type\n    \n as \n    \n    poll_settings_vote_selection_type\n    \n, \n    \n    \n    poll_unique_voters_count\n    \n as \n    \n    poll_unique_voters_count\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id,\n        _fivetran_synced,\n        post_id as ugc_post_urn,\n        article_description,\n        article_source,\n        article_thumbnail,\n        article_thumbnail_alt_text,\n        cast(article_title as TEXT) as article_title,\n        carousel_id,\n        media_alt_text,\n        media_id,\n        cast(media_title as TEXT) as media_title,\n        multi_image_alt_text,\n        poll_question,\n        poll_settings_duration,\n        poll_settings_is_voter_visible_to_author,\n        poll_settings_vote_selection_type,\n        poll_unique_voters_count,\n        type as post_type,\n        source_relation\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__post_content\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:46.969272Z", "completed_at": "2024-08-20T15:04:47.215755Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.215991Z", "completed_at": "2024-08-20T15:04:47.215998Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.27237606048583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages_source.stg_linkedin_pages__ugc_post_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__ugc_post_history_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    author\n    \n as \n    \n    author\n    \n, \n    \n    \n    commentary\n    \n as \n    \n    commentary\n    \n, \n    \n    \n    container_entity\n    \n as \n    \n    container_entity\n    \n, \n    \n    \n    created_actor\n    \n as \n    \n    created_actor\n    \n, \n    \n    \n    created_time\n    \n as \n    \n    created_time\n    \n, \n    \n    \n    distribution_external_distribution_channels\n    \n as \n    \n    distribution_external_distribution_channels\n    \n, \n    \n    \n    distribution_feed_distribution\n    \n as \n    \n    distribution_feed_distribution\n    \n, \n    \n    \n    first_published_at\n    \n as \n    \n    first_published_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_modified_actor\n    \n as \n    \n    last_modified_actor\n    \n, \n    \n    \n    last_modified_time\n    \n as \n    \n    last_modified_time\n    \n, \n    \n    \n    lifecycle_state\n    \n as \n    \n    lifecycle_state\n    \n, \n    \n    \n    response_context_parent\n    \n as \n    \n    response_context_parent\n    \n, \n    \n    \n    response_context_root\n    \n as \n    \n    response_context_root\n    \n, \n    \n    \n    visibility\n    \n as \n    \n    visibility\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        author as post_author,\n        commentary,\n        created_actor,\n        created_time as created_timestamp,\n        first_published_at as first_published_timestamp,\n        cast(case when lower(id) like '%urn:li:share:%' \n                then replace(id, 'urn:li:share:', '')\n            when lower(id) like '%urn:li:ugcpost:%'\n                then replace(lower(id), 'urn:li:ugcpost:', '')\n            else id end\n            as TEXT) as ugc_post_id,\n        id as ugc_post_urn,\n        -- This generates an 'embed' URL. I can't get normal URLs working.\n        'https://www.linkedin.com/embed/feed/update/' || id as post_url,\n        last_modified_actor,\n        last_modified_time as last_modified_timestamp,\n        lifecycle_state,\n        visibility,\n        source_relation\n\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__ugc_post_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.194523Z", "completed_at": "2024-08-20T15:04:47.443213Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.443561Z", "completed_at": "2024-08-20T15:04:47.443569Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.27584171295166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages_source.stg_linkedin_pages__ugc_post_share_statistic", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__ugc_post_share_statistic_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    share_statistic_id\n    \n as \n    \n    share_statistic_id\n    \n, \n    \n    \n    ugc_post_id\n    \n as \n    \n    ugc_post_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        share_statistic_id,\n        cast(ugc_post_id as TEXT) as ugc_post_id,\n        source_relation\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__ugc_post_share_statistic\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.202629Z", "completed_at": "2024-08-20T15:04:47.468641Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.468869Z", "completed_at": "2024-08-20T15:04:47.468877Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2966139316558838, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_organic_source.stg_twitter_organic__account_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__account_history_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    approval_status\n    \n as \n    \n    approval_status\n    \n, \n    \n    \n    business_id\n    \n as \n    \n    business_id\n    \n, \n    \n    \n    business_name\n    \n as \n    \n    business_name\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    deleted\n    \n as \n    \n    deleted\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    industry_type\n    \n as \n    \n    industry_type\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    salt\n    \n as \n    \n    salt\n    \n, \n    \n    \n    timezone\n    \n as \n    \n    timezone\n    \n, \n    \n    \n    timezone_switch_at\n    \n as \n    \n    timezone_switch_at\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        business_id,\n        business_name,\n        created_at as created_timestamp,\n        deleted as is_deleted,\n        id as account_id,\n        industry_type,\n        name as account_name,\n        timezone,\n        updated_at as updated_timestamp,\n        source_relation\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__account_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.500972Z", "completed_at": "2024-08-20T15:04:47.504178Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.504373Z", "completed_at": "2024-08-20T15:04:47.504377Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0041921138763427734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_pages.facebook_pages__pages_report", "compiled": true, "compiled_code": "with pages as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__page\"\n\n), page_metrics as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__daily_page_metrics_total\"\n\n), joined as (\n\n    select \n        page_metrics.date_day,\n        pages.page_id,\n        pages.page_name,\n        page_metrics.actions_post_reactions_total,\n        page_metrics.fan_adds,\n        page_metrics.fan_removes,\n        page_metrics.impressions,\n        page_metrics.post_engagements,\n        page_metrics.posts_impressions,\n        page_metrics.video_complete_views_30s,\n        page_metrics.video_views,\n        page_metrics.video_views_10s,\n        page_metrics.views_total,    \n        page_metrics.source_relation\n    from page_metrics\n    left join pages\n        on page_metrics.page_id = pages.page_id\n        and page_metrics.source_relation = pages.source_relation\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"facebook_pages__pages_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.242000Z", "completed_at": "2024-08-20T15:04:47.499867Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.500504Z", "completed_at": "2024-08-20T15:04:47.500509Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.31325626373291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_organic_source.stg_twitter_organic__tweet", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__tweet_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    card_uri\n    \n as \n    \n    card_uri\n    \n, \n    \n    \n    coordinates_coordinates\n    \n as \n    \n    coordinates_coordinates\n    \n, \n    \n    \n    coordinates_type\n    \n as \n    \n    coordinates_type\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    favorite_count\n    \n as \n    \n    favorite_count\n    \n, \n    \n    \n    favorited\n    \n as \n    \n    favorited\n    \n, \n    \n    \n    followers\n    \n as \n    \n    followers\n    \n, \n    cast(null as TEXT) as \n    \n    full_text\n    \n , \n    \n    \n    geo_coordinates\n    \n as \n    \n    geo_coordinates\n    \n, \n    \n    \n    geo_type\n    \n as \n    \n    geo_type\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    in_reply_to_screen_name\n    \n as \n    \n    in_reply_to_screen_name\n    \n, \n    \n    \n    in_reply_to_status_id\n    \n as \n    \n    in_reply_to_status_id\n    \n, \n    \n    \n    in_reply_to_user_id\n    \n as \n    \n    in_reply_to_user_id\n    \n, \n    \n    \n    lang\n    \n as \n    \n    lang\n    \n, \n    \n    \n    media_key\n    \n as \n    \n    media_key\n    \n, \n    \n    \n    retweet_count\n    \n as \n    \n    retweet_count\n    \n, \n    \n    \n    retweeted\n    \n as \n    \n    retweeted\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    truncated\n    \n as \n    \n    truncated\n    \n, \n    \n    \n    tweet_type\n    \n as \n    \n    tweet_type\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        account_id,\n        card_uri,\n        coordinates_coordinates,\n        coordinates_type,\n        created_at as created_timestamp,\n        favorite_count,\n        favorited,\n        followers,\n        full_text as tweet_text,\n        geo_coordinates,\n        geo_type,\n        id as organic_tweet_id,\n        'https://twitter.com/p/status/' || id as post_url,\n        in_reply_to_screen_name,\n        in_reply_to_status_id,\n        in_reply_to_user_id,\n        lang as language,\n        media_key,\n        retweet_count,\n        retweeted,\n        source,\n        truncated,\n        tweet_type,\n        cast(user_id as bigint) as user_id,\n        source_relation\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__tweet\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.217310Z", "completed_at": "2024-08-20T15:04:47.498363Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.499153Z", "completed_at": "2024-08-20T15:04:47.499159Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.34055089950561523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_organic_source.stg_twitter_organic__organic_tweet_report", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__organic_tweet_report_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    app_clicks\n    \n as \n    \n    app_clicks\n    \n, \n    \n    \n    card_engagements\n    \n as \n    \n    card_engagements\n    \n, \n    \n    \n    carousel_swipes\n    \n as \n    \n    carousel_swipes\n    \n, \n    \n    \n    clicks\n    \n as \n    \n    clicks\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    engagements\n    \n as \n    \n    engagements\n    \n, \n    \n    \n    follows\n    \n as \n    \n    follows\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n, \n    \n    \n    likes\n    \n as \n    \n    likes\n    \n, \n    \n    \n    organic_tweet_id\n    \n as \n    \n    organic_tweet_id\n    \n, \n    \n    \n    placement\n    \n as \n    \n    placement\n    \n, \n    \n    \n    poll_card_vote\n    \n as \n    \n    poll_card_vote\n    \n, \n    \n    \n    qualified_impressions\n    \n as \n    \n    qualified_impressions\n    \n, \n    \n    \n    replies\n    \n as \n    \n    replies\n    \n, \n    \n    \n    retweets\n    \n as \n    \n    retweets\n    \n, \n    \n    \n    tweets_send\n    \n as \n    \n    tweets_send\n    \n, \n    \n    \n    unfollows\n    \n as \n    \n    unfollows\n    \n, \n    \n    \n    url_clicks\n    \n as \n    \n    url_clicks\n    \n, \n    \n    \n    video_15_s_views\n    \n as \n    \n    video_15_s_views\n    \n, \n    \n    \n    video_3_s_100_pct_views\n    \n as \n    \n    video_3_s_100_pct_views\n    \n, \n    \n    \n    video_6_s_views\n    \n as \n    \n    video_6_s_views\n    \n, \n    \n    \n    video_content_starts\n    \n as \n    \n    video_content_starts\n    \n, \n    \n    \n    video_cta_clicks\n    \n as \n    \n    video_cta_clicks\n    \n, \n    \n    \n    video_total_views\n    \n as \n    \n    video_total_views\n    \n, \n    \n    \n    video_views_100\n    \n as \n    \n    video_views_100\n    \n, \n    \n    \n    video_views_25\n    \n as \n    \n    video_views_25\n    \n, \n    \n    \n    video_views_50\n    \n as \n    \n    video_views_50\n    \n, \n    \n    \n    video_views_75\n    \n as \n    \n    video_views_75\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        account_id,\n        app_clicks,\n        card_engagements,\n        carousel_swipes,\n        clicks,\n        date as date_day,\n        engagements,\n        follows,\n        impressions,\n        likes,\n        organic_tweet_id,\n        placement,\n        poll_card_vote,\n        qualified_impressions,\n        replies,\n        retweets,\n        tweets_send,\n        unfollows,\n        url_clicks,\n        video_15_s_views,\n        video_3_s_100_pct_views,\n        video_6_s_views,\n        video_content_starts,\n        video_cta_clicks,\n        video_total_views,\n        video_views_100,\n        video_views_25,\n        video_views_50,\n        video_views_75,\n        source_relation\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__organic_tweet_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.505701Z", "completed_at": "2024-08-20T15:04:47.562259Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.562851Z", "completed_at": "2024-08-20T15:04:47.562859Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.057836055755615234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages_source.dbt_utils_unique_combination_of_columns_stg_facebook_pages__daily_page_metrics_total_page_id__date_day__source_relation.b90aa3f043", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        page_id, date_day, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__daily_page_metrics_total\"\n    group by page_id, date_day, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.559203Z", "completed_at": "2024-08-20T15:04:47.568784Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.569456Z", "completed_at": "2024-08-20T15:04:47.569464Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011682271957397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages_source.dbt_utils_unique_combination_of_columns_stg_facebook_pages__page_page_id__source_relation.32a7459a05", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        page_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__page\"\n    group by page_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.563285Z", "completed_at": "2024-08-20T15:04:47.569906Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.570643Z", "completed_at": "2024-08-20T15:04:47.570647Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011852025985717773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages_source.not_null_stg_facebook_pages__daily_page_metrics_total_date_day.880eb929d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__daily_page_metrics_total\"\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.570997Z", "completed_at": "2024-08-20T15:04:47.578023Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.578557Z", "completed_at": "2024-08-20T15:04:47.578563Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009512901306152344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages_source.not_null_stg_facebook_pages__daily_page_metrics_total_page_id.937414eaf3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect page_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__daily_page_metrics_total\"\nwhere page_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.575331Z", "completed_at": "2024-08-20T15:04:47.582479Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.583087Z", "completed_at": "2024-08-20T15:04:47.583097Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009344100952148438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages_source.not_null_stg_facebook_pages__page_page_id.3839292889", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect page_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__page\"\nwhere page_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.578977Z", "completed_at": "2024-08-20T15:04:47.583526Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.584409Z", "completed_at": "2024-08-20T15:04:47.584414Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009510278701782227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_pages.int_facebook_pages__lastest_post", "compiled": true, "compiled_code": "with posts as (\n    \n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__post_history\"\n\n), most_recent_posts as (\n\n    select\n        *,\n        row_number() over (partition by post_id, source_relation order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from posts\n)\n\nselect *\nfrom most_recent_posts", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"int_facebook_pages__lastest_post\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.584841Z", "completed_at": "2024-08-20T15:04:47.592519Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.593055Z", "completed_at": "2024-08-20T15:04:47.593061Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010375261306762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages_source.dbt_utils_unique_combination_of_columns_stg_facebook_pages__post_history_post_id__updated_timestamp__source_relation.67de991272", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        post_id, updated_timestamp, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__post_history\"\n    group by post_id, updated_timestamp, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.589646Z", "completed_at": "2024-08-20T15:04:47.596579Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.597155Z", "completed_at": "2024-08-20T15:04:47.597161Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008833885192871094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages_source.not_null_stg_facebook_pages__post_history_post_id.fd3293856c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect post_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__post_history\"\nwhere post_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.593474Z", "completed_at": "2024-08-20T15:04:47.597743Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.601426Z", "completed_at": "2024-08-20T15:04:47.601433Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012125968933105469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages_source.dbt_utils_unique_combination_of_columns_stg_facebook_pages__lifetime_post_metrics_total_post_id__date_day__source_relation.c12787b228", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        post_id, date_day, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__lifetime_post_metrics_total\"\n    group by post_id, date_day, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.598386Z", "completed_at": "2024-08-20T15:04:47.603004Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.607405Z", "completed_at": "2024-08-20T15:04:47.607411Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010623931884765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages_source.not_null_stg_facebook_pages__lifetime_post_metrics_total_date_day.de0419d721", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__lifetime_post_metrics_total\"\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.603248Z", "completed_at": "2024-08-20T15:04:47.611337Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.611949Z", "completed_at": "2024-08-20T15:04:47.611959Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010167121887207031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages_source.not_null_stg_facebook_pages__lifetime_post_metrics_total_post_id.66563712ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect post_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__lifetime_post_metrics_total\"\nwhere post_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.607878Z", "completed_at": "2024-08-20T15:04:47.612818Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.616115Z", "completed_at": "2024-08-20T15:04:47.616121Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01341390609741211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.instagram_business_source.dbt_utils_unique_combination_of_columns_stg_instagram_business__media_history__fivetran_id__post_id__source_relation.57e3622790", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        _fivetran_id, post_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_history\"\n    group by _fivetran_id, post_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.613010Z", "completed_at": "2024-08-20T15:04:47.619862Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.620447Z", "completed_at": "2024-08-20T15:04:47.620452Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008896827697753906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.instagram_business_source.not_null_stg_instagram_business__media_history__fivetran_id.cfe4889ca2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_history\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.617082Z", "completed_at": "2024-08-20T15:04:47.621341Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.625196Z", "completed_at": "2024-08-20T15:04:47.625203Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009430170059204102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.instagram_business_source.not_null_stg_instagram_business__media_history_post_id.878653b6a5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect post_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_history\"\nwhere post_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.621582Z", "completed_at": "2024-08-20T15:04:47.630876Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.631306Z", "completed_at": "2024-08-20T15:04:47.631313Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011243104934692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_pages_source.dbt_utils_unique_combination_of_columns_stg_linkedin_pages__organization_organization_id__source_relation.edd32b54a1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        organization_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__organization\"\n    group by organization_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.626155Z", "completed_at": "2024-08-20T15:04:47.634686Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.635455Z", "completed_at": "2024-08-20T15:04:47.635462Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010668039321899414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.instagram_business_source.dbt_utils_unique_combination_of_columns_stg_instagram_business__user_history__fivetran_id__user_id__source_relation.1fc678e6cf", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        _fivetran_id, user_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__user_history\"\n    group by _fivetran_id, user_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.631701Z", "completed_at": "2024-08-20T15:04:47.636432Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.637138Z", "completed_at": "2024-08-20T15:04:47.637142Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006671905517578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.instagram_business_source.not_null_stg_instagram_business__user_history__fivetran_id.726c530904", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__user_history\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.637503Z", "completed_at": "2024-08-20T15:04:47.644501Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.645115Z", "completed_at": "2024-08-20T15:04:47.645122Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009283065795898438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.instagram_business_source.not_null_stg_instagram_business__user_history_user_id.72a7df3526", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__user_history\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.641098Z", "completed_at": "2024-08-20T15:04:47.648409Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.649016Z", "completed_at": "2024-08-20T15:04:47.649022Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012234926223754883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.instagram_business.instagram_business__posts", "compiled": true, "compiled_code": "with media_history as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_history\"\n    where is_most_recent_record = true\n\n), media_insights as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_insights\"\n    where is_most_recent_record = true\n\n), user_history as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__user_history\"\n    where is_most_recent_record = true\n\n), joined as (\n\n    select \n        user_history.account_name,\n        user_history.user_id,\n        media_history.post_caption,\n        media_history.created_timestamp,\n        media_history.post_id,\n        media_history.is_comment_enabled,\n        media_history.is_story,\n        media_history.media_type,\n        media_history.media_url,\n        media_history.post_url,\n        media_history.shortcode,\n        media_history.thumbnail_url,\n        media_history.username,\n        media_insights.carousel_album_engagement,\n        media_insights.carousel_album_impressions,\n        media_insights.carousel_album_reach,\n        media_insights.carousel_album_saved,\n        media_insights.carousel_album_video_views,\n        media_insights.comment_count,\n        media_insights.like_count,\n        media_insights.story_exits,\n        media_insights.story_impressions,\n        media_insights.story_reach,\n        media_insights.story_replies,\n        media_insights.story_taps_back,\n        media_insights.story_taps_forward,\n        media_insights.video_photo_engagement,\n        media_insights.video_photo_impressions,\n        media_insights.video_photo_reach,\n        media_insights.video_photo_saved,\n        media_insights.video_views,\n        media_insights.reel_comments,\n        media_insights.reel_likes,\n        media_insights.reel_plays,\n        media_insights.reel_reach,\n        media_insights.reel_shares,\n        media_insights.reel_total_interactions,\n        media_history.source_relation\n    from media_history\n    left join media_insights\n        on media_history.post_id = media_insights.post_id\n        and media_history.source_relation = media_insights.source_relation\n    left join user_history\n        on media_history.user_id = user_history.user_id\n        and media_history.source_relation = user_history.source_relation\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"instagram_business__posts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.645527Z", "completed_at": "2024-08-20T15:04:47.650998Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.651952Z", "completed_at": "2024-08-20T15:04:47.651958Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007887125015258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.instagram_business_source.dbt_utils_unique_combination_of_columns_stg_instagram_business__media_insights__fivetran_id__post_id__source_relation.0f78b7064e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        _fivetran_id, post_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_insights\"\n    group by _fivetran_id, post_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.652341Z", "completed_at": "2024-08-20T15:04:47.658776Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.659420Z", "completed_at": "2024-08-20T15:04:47.659427Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009029865264892578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.instagram_business_source.not_null_stg_instagram_business__media_insights__fivetran_id.5cc95a9508", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_insights\"\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.655775Z", "completed_at": "2024-08-20T15:04:47.663460Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.664076Z", "completed_at": "2024-08-20T15:04:47.664083Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01258397102355957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.instagram_business_source.not_null_stg_instagram_business__media_insights_post_id.f6e59f012e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect post_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_instagram_business__media_insights\"\nwhere post_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.659815Z", "completed_at": "2024-08-20T15:04:47.664675Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.668132Z", "completed_at": "2024-08-20T15:04:47.668139Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009765863418579102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_pages_source.dbt_utils_unique_combination_of_columns_stg_linkedin_pages__share_statistic_share_statistic_id__source_relation.452f64d50a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        share_statistic_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__share_statistic\"\n    group by share_statistic_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.665178Z", "completed_at": "2024-08-20T15:04:47.669912Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.674658Z", "completed_at": "2024-08-20T15:04:47.674666Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010993719100952148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_pages_source.not_null_stg_linkedin_pages__share_statistic_organization_entity_urn.150c878c76", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_entity_urn\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__share_statistic\"\nwhere organization_entity_urn is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.670126Z", "completed_at": "2024-08-20T15:04:47.678632Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.679238Z", "completed_at": "2024-08-20T15:04:47.679243Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010719060897827148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_pages_source.dbt_utils_unique_combination_of_columns_stg_linkedin_pages__organization_ugc_post_organization_id__ugc_post_id__source_relation.74490569e1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        organization_id, ugc_post_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__organization_ugc_post\"\n    group by organization_id, ugc_post_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.675157Z", "completed_at": "2024-08-20T15:04:47.679821Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.682444Z", "completed_at": "2024-08-20T15:04:47.682449Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012840986251831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_pages_source.dbt_utils_unique_combination_of_columns_stg_linkedin_pages__post_content_ugc_post_urn___fivetran_id__source_relation.ee639cae57", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        ugc_post_urn, _fivetran_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__post_content\"\n    group by ugc_post_urn, _fivetran_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.680309Z", "completed_at": "2024-08-20T15:04:47.683644Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.687327Z", "completed_at": "2024-08-20T15:04:47.687333Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008465766906738281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages.int_linkedin_pages__latest_post_history", "compiled": true, "compiled_code": "with ugc_post_history as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__ugc_post_history\"\n\n), is_most_recent as (\n\n    select\n        *,\n        row_number() over (partition by ugc_post_id, source_relation order by last_modified_timestamp desc) = 1 as is_most_recent_record\n    from ugc_post_history\n\n)\n\nselect *\nfrom is_most_recent", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"int_linkedin_pages__latest_post_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.684082Z", "completed_at": "2024-08-20T15:04:47.691210Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.691844Z", "completed_at": "2024-08-20T15:04:47.691850Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009083032608032227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_pages_source.dbt_utils_unique_combination_of_columns_stg_linkedin_pages__ugc_post_history_ugc_post_id__last_modified_timestamp__source_relation.8192e4952b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        ugc_post_id, last_modified_timestamp, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__ugc_post_history\"\n    group by ugc_post_id, last_modified_timestamp, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.688486Z", "completed_at": "2024-08-20T15:04:47.692237Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.695741Z", "completed_at": "2024-08-20T15:04:47.695748Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011987924575805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages.int_linkedin_pages__latest_post", "compiled": true, "compiled_code": "with ugc_post as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__ugc_post_share_statistic\"\n\n), is_most_recent as (\n\n    select \n        *,\n        row_number() over (partition by ugc_post_id, source_relation order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from ugc_post\n\n)\n\nselect *\nfrom is_most_recent", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"int_linkedin_pages__latest_post\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.692452Z", "completed_at": "2024-08-20T15:04:47.696809Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.697487Z", "completed_at": "2024-08-20T15:04:47.697491Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006654977798461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_pages_source.dbt_utils_unique_combination_of_columns_stg_linkedin_pages__ugc_post_share_statistic_share_statistic_id__source_relation.10bd19bf37", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        share_statistic_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__ugc_post_share_statistic\"\n    group by share_statistic_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.699207Z", "completed_at": "2024-08-20T15:04:47.711906Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.712625Z", "completed_at": "2024-08-20T15:04:47.712632Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.016482114791870117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_organic.int_twitter_organic__latest_account", "compiled": true, "compiled_code": "with accounts as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__account_history\"\n\n), is_most_recent as (\n\n    select \n        *,\n        \n        row_number() over (partition by account_id order by _fivetran_synced desc) = 1 as is_most_recent_record\n\n    from accounts\n\n)\n\nselect *\nfrom is_most_recent", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"int_twitter_organic__latest_account\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.707621Z", "completed_at": "2024-08-20T15:04:47.716498Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.717192Z", "completed_at": "2024-08-20T15:04:47.717200Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.020037174224853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_organic_source.dbt_utils_unique_combination_of_columns_stg_twitter_organic__account_history_account_id__updated_timestamp__source_relation.41e71af7e1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        account_id, updated_timestamp, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__account_history\"\n    group by account_id, updated_timestamp, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.713295Z", "completed_at": "2024-08-20T15:04:47.717826Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.721368Z", "completed_at": "2024-08-20T15:04:47.721376Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009994983673095703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_organic_source.not_null_stg_twitter_organic__account_history_account_id.a77a3afb85", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__account_history\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.718338Z", "completed_at": "2024-08-20T15:04:47.726946Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.729924Z", "completed_at": "2024-08-20T15:04:47.729931Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01312708854675293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages.dbt_utils_unique_combination_of_columns_facebook_pages__pages_report_page_id__date_day__source_relation.f6275f55a9", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        page_id, date_day, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"facebook_pages__pages_report\"\n    group by page_id, date_day, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.722856Z", "completed_at": "2024-08-20T15:04:47.730380Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.730934Z", "completed_at": "2024-08-20T15:04:47.730938Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009217977523803711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages.not_null_facebook_pages__pages_report_date_day.0d88b4b154", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"facebook_pages__pages_report\"\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.727289Z", "completed_at": "2024-08-20T15:04:47.731278Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.732037Z", "completed_at": "2024-08-20T15:04:47.732041Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00948786735534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages.not_null_facebook_pages__pages_report_page_id.42b740bfbe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect page_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"facebook_pages__pages_report\"\nwhere page_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.733239Z", "completed_at": "2024-08-20T15:04:47.742941Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.743407Z", "completed_at": "2024-08-20T15:04:47.743414Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012022018432617188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_organic_source.dbt_utils_unique_combination_of_columns_stg_twitter_organic__tweet_organic_tweet_id__source_relation.9c43fbcfa6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        organic_tweet_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__tweet\"\n    group by organic_tweet_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.737143Z", "completed_at": "2024-08-20T15:04:47.743864Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.744418Z", "completed_at": "2024-08-20T15:04:47.744422Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011863946914672852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_organic_source.not_null_stg_twitter_organic__tweet_account_id.babfc0e1e9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__tweet\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.740365Z", "completed_at": "2024-08-20T15:04:47.744755Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.745479Z", "completed_at": "2024-08-20T15:04:47.745482Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008828878402709961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_organic_source.not_null_stg_twitter_organic__tweet_organic_tweet_id.1d21df5ac1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organic_tweet_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__tweet\"\nwhere organic_tweet_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.746611Z", "completed_at": "2024-08-20T15:04:47.754735Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.757869Z", "completed_at": "2024-08-20T15:04:47.757877Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012990951538085938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_organic_source.dbt_utils_unique_combination_of_columns_stg_twitter_organic__organic_tweet_report_account_id__organic_tweet_id__date_day__source_relation.4a121854e5", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        account_id, organic_tweet_id, date_day, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__organic_tweet_report\"\n    group by account_id, organic_tweet_id, date_day, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.751556Z", "completed_at": "2024-08-20T15:04:47.758314Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.758956Z", "completed_at": "2024-08-20T15:04:47.758961Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012925863265991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_organic_source.not_null_stg_twitter_organic__organic_tweet_report_account_id.2e0dfb4d1a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__organic_tweet_report\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.754958Z", "completed_at": "2024-08-20T15:04:47.759806Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.771133Z", "completed_at": "2024-08-20T15:04:47.771141Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020030975341796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_organic_source.not_null_stg_twitter_organic__organic_tweet_report_organic_tweet_id.300639fcfb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organic_tweet_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__organic_tweet_report\"\nwhere organic_tweet_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.771873Z", "completed_at": "2024-08-20T15:04:47.782261Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.782895Z", "completed_at": "2024-08-20T15:04:47.782910Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.023414134979248047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_pages.facebook_pages__posts_report", "compiled": true, "compiled_code": "with posts as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"int_facebook_pages__lastest_post\"\n    where is_most_recent_record = True\n\n), pages as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__page\"\n\n), post_metrics as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_facebook_pages__lifetime_post_metrics_total\"\n\n), joined as (\n\n    select \n        posts.created_timestamp,\n        posts.post_id,\n        posts.post_message,\n        posts.post_url,\n        posts.page_id,\n        pages.page_name,\n        post_metrics.date_day,\n        post_metrics.clicks,\n        post_metrics.impressions,\n        post_metrics.video_avg_time_watched,\n        post_metrics.video_view_time,\n        post_metrics.video_views,\n        post_metrics.video_views_10s,\n        post_metrics.video_views_15s,\n        post_metrics.reactions_like_total as likes,\n        post_metrics.source_relation,\n        post_metrics.is_most_recent_record\n    from post_metrics\n    left join posts\n        on post_metrics.post_id = posts.post_id\n        and post_metrics.source_relation = posts.source_relation\n    left join pages\n        on posts.page_id = pages.page_id\n        and posts.source_relation = pages.source_relation\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"facebook_pages__posts_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.776693Z", "completed_at": "2024-08-20T15:04:47.785900Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.786722Z", "completed_at": "2024-08-20T15:04:47.786729Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015258073806762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.social_media_reporting.social_media_reporting__instagram_posts_reporting", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"instagram_business__posts\"\n\n), fields as (\n\n    select\n        account_name as page_name,\n        user_id as page_id,\n        post_caption as post_message,\n        created_timestamp,\n        cast(post_id as TEXT) as post_id,\n        post_url,\n        source_relation,\n        'instagram' as platform,\n        coalesce(sum(comment_count),0) as comments,\n        coalesce(sum(like_count),0) as likes,\n        sum(coalesce(carousel_album_impressions,0) + coalesce(story_impressions,0) + coalesce(video_photo_impressions, 0)) as impressions\n    from report\n    group by 1,2,3,4,5,6,7,8\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__instagram_posts_reporting\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.783414Z", "completed_at": "2024-08-20T15:04:47.787985Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.791386Z", "completed_at": "2024-08-20T15:04:47.791395Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015095710754394531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.instagram_business.dbt_utils_unique_combination_of_columns_instagram_business__posts_post_id__source_relation.5a8087988b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        post_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"instagram_business__posts\"\n    group by post_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.788432Z", "completed_at": "2024-08-20T15:04:47.796620Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.797127Z", "completed_at": "2024-08-20T15:04:47.797133Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009991168975830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.instagram_business.not_null_instagram_business__posts_post_id.8daa517f7d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect post_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"instagram_business__posts\"\nwhere post_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.792462Z", "completed_at": "2024-08-20T15:04:47.800530Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.801143Z", "completed_at": "2024-08-20T15:04:47.801148Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013015985488891602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.linkedin_pages.linkedin_pages__posts", "compiled": true, "compiled_code": "with share_statistic as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__share_statistic\"\n\n),\n\nugc_post_share_statistic as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"int_linkedin_pages__latest_post\"\n    where is_most_recent_record = true\n\n),\n\nugc_post_history as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"int_linkedin_pages__latest_post_history\"\n    where is_most_recent_record = true\n\n),\n\npost_content as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__post_content\"\n\n),\n\norganization as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__organization\"\n\n),\n\norganization_ugc_post as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_linkedin_pages__organization_ugc_post\"\n\n),\n\njoined as (\n\n    select\n        ugc_post_history.ugc_post_id,\n        ugc_post_history.post_author,\n        ugc_post_history.post_url,\n        ugc_post_history.created_timestamp,\n        ugc_post_history.first_published_timestamp,\n        ugc_post_history.lifecycle_state,\n        ugc_post_history.commentary,\n        organization.organization_id,\n        coalesce(post_content.article_title, post_content.media_title) as post_title,\n        post_content.post_type,\n        organization.organization_name,\n        share_statistic.click_count,\n        share_statistic.comment_count,\n        share_statistic.impression_count,\n        share_statistic.like_count,\n        share_statistic.share_count,\n        ugc_post_history.source_relation\n    from ugc_post_history\n    left join ugc_post_share_statistic\n        on ugc_post_share_statistic.ugc_post_id = ugc_post_history.ugc_post_id\n        and ugc_post_share_statistic.source_relation = ugc_post_history.source_relation\n    left join share_statistic\n        on share_statistic.share_statistic_id = ugc_post_share_statistic.share_statistic_id\n        and share_statistic.source_relation = ugc_post_share_statistic.source_relation\n    left join post_content\n        on ugc_post_history.ugc_post_urn = post_content.ugc_post_urn\n        and ugc_post_history.source_relation = post_content.source_relation\n    left join organization_ugc_post\n        on ugc_post_history.ugc_post_id = organization_ugc_post.ugc_post_id\n        and ugc_post_history.source_relation = organization_ugc_post.source_relation\n    left join organization\n        on organization_ugc_post.organization_id = organization.organization_id\n        and organization_ugc_post.source_relation = organization.source_relation\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"linkedin_pages__posts\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.797513Z", "completed_at": "2024-08-20T15:04:47.802033Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.802776Z", "completed_at": "2024-08-20T15:04:47.802780Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006467103958129883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.social_media_reporting.social_media_reporting__facebook_posts_reporting", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"facebook_pages__posts_report\"\n    where is_most_recent_record = True\n\n), fields as (\n\n    select\n        created_timestamp,\n        cast(post_id as TEXT) as post_id,\n        post_message,\n        post_url,\n        page_id,\n        page_name,\n        source_relation,\n        'facebook' as platform,\n        coalesce(sum(clicks),0) as clicks,\n        coalesce(sum(impressions),0) as impressions,\n        coalesce(sum(likes),0) as likes\n    from report\n    group by 1,2,3,4,5,6,7,8\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__facebook_posts_reporting\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.471081Z", "completed_at": "2024-08-20T15:04:47.776040Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.781991Z", "completed_at": "2024-08-20T15:04:47.781999Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.34095215797424316, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_organic_source.stg_twitter_organic__twitter_user_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__twitter_user_history_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    contributors_enabled\n    \n as \n    \n    contributors_enabled\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    default_profile\n    \n as \n    \n    default_profile\n    \n, \n    \n    \n    default_profile_image\n    \n as \n    \n    default_profile_image\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    favourites_count\n    \n as \n    \n    favourites_count\n    \n, \n    \n    \n    followers_count\n    \n as \n    \n    followers_count\n    \n, \n    \n    \n    friends_count\n    \n as \n    \n    friends_count\n    \n, \n    \n    \n    geo_enabled\n    \n as \n    \n    geo_enabled\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_translation_enabled\n    \n as \n    \n    is_translation_enabled\n    \n, \n    \n    \n    is_translator\n    \n as \n    \n    is_translator\n    \n, \n    \n    \n    lang\n    \n as \n    \n    lang\n    \n, \n    \n    \n    listed_count\n    \n as \n    \n    listed_count\n    \n, \n    \n    \n    location\n    \n as \n    \n    location\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    profile_background_image_url\n    \n as \n    \n    profile_background_image_url\n    \n, \n    \n    \n    profile_background_image_url_https\n    \n as \n    \n    profile_background_image_url_https\n    \n, \n    \n    \n    profile_background_tile\n    \n as \n    \n    profile_background_tile\n    \n, \n    \n    \n    profile_banner_url\n    \n as \n    \n    profile_banner_url\n    \n, \n    \n    \n    profile_image_url\n    \n as \n    \n    profile_image_url\n    \n, \n    \n    \n    profile_image_url_https\n    \n as \n    \n    profile_image_url_https\n    \n, \n    \n    \n    profile_use_background_image\n    \n as \n    \n    profile_use_background_image\n    \n, \n    \n    \n    protected_user\n    \n as \n    \n    protected_user\n    \n, \n    \n    \n    screen_name\n    \n as \n    \n    screen_name\n    \n, \n    \n    \n    statuses_count\n    \n as \n    \n    statuses_count\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    utc_offset\n    \n as \n    \n    utc_offset\n    \n, \n    \n    \n    verified\n    \n as \n    \n    verified\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_synced,\n        created_at as created_timestamp,\n        description as user_description,\n        followers_count,\n        cast(id as bigint) as user_id,\n        location as user_location,\n        name as user_name,\n        screen_name as user_screen_name,\n        source_relation\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__twitter_user_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.803118Z", "completed_at": "2024-08-20T15:04:47.811142Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.812097Z", "completed_at": "2024-08-20T15:04:47.812102Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0106201171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages.dbt_utils_unique_combination_of_columns_facebook_pages__posts_report_post_id__date_day__source_relation.19483d54fa", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        post_id, date_day, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"facebook_pages__posts_report\"\n    group by post_id, date_day, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.808038Z", "completed_at": "2024-08-20T15:04:47.812471Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.816518Z", "completed_at": "2024-08-20T15:04:47.816523Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014068126678466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_pages.not_null_facebook_pages__posts_report_date_day.ec0cb997b7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"facebook_pages__posts_report\"\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.813059Z", "completed_at": "2024-08-20T15:04:47.817973Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.821602Z", "completed_at": "2024-08-20T15:04:47.821608Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010977983474731445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.social_media_reporting.social_media_reporting__linkedin_posts_reporting", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"linkedin_pages__posts\"\n\n), fields as (\n\n    select        \n        organization_id as page_id,\n        organization_name as page_name,\n        cast(ugc_post_id  as TEXT) as post_id,\n        created_timestamp,\n        post_url,\n        source_relation,\n        'linkedin' as platform,\n        coalesce(post_title, commentary) as post_message,\n        coalesce(sum(click_count),0) as clicks,\n        coalesce(sum(comment_count),0) as comments,\n        coalesce(sum(impression_count),0) as impressions,\n        coalesce(sum(like_count),0) as likes,\n        coalesce(sum(share_count),0) as shares\n    from report\n    group by 1,2,3,4,5,6,7,8\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__linkedin_posts_reporting\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.818630Z", "completed_at": "2024-08-20T15:04:47.830542Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.831137Z", "completed_at": "2024-08-20T15:04:47.831143Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01427602767944336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.linkedin_pages.dbt_utils_unique_combination_of_columns_linkedin_pages__posts_ugc_post_id__source_relation.d7c3d11ad1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        ugc_post_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"linkedin_pages__posts\"\n    group by ugc_post_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.821983Z", "completed_at": "2024-08-20T15:04:47.830754Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.831730Z", "completed_at": "2024-08-20T15:04:47.831734Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014541864395141602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_organic.int_twitter_organic__latest_user", "compiled": true, "compiled_code": "with users as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__twitter_user_history\"\n\n), is_most_recent as (\n\n    select \n        *,\n        \n        row_number() over (partition by user_id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from users\n\n)\n\nselect *\nfrom is_most_recent", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"int_twitter_organic__latest_user\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.827549Z", "completed_at": "2024-08-20T15:04:47.831537Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.834896Z", "completed_at": "2024-08-20T15:04:47.834903Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01661062240600586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_organic_source.dbt_utils_unique_combination_of_columns_stg_twitter_organic__twitter_user_history_user_id__source_relation.577d45a09a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        user_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__twitter_user_history\"\n    group by user_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.832108Z", "completed_at": "2024-08-20T15:04:47.840070Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.840387Z", "completed_at": "2024-08-20T15:04:47.840394Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010308027267456055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_organic_source.not_null_stg_twitter_organic__twitter_user_history_user_id.5d6e14a6ce", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__twitter_user_history\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.836349Z", "completed_at": "2024-08-20T15:04:47.841043Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.841327Z", "completed_at": "2024-08-20T15:04:47.841332Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0055391788482666016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.twitter_organic.twitter_organic__tweets", "compiled": true, "compiled_code": "with account_history as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"int_twitter_organic__latest_account\"\n    where is_most_recent_record = True\n\n),\n\norganic_tweet_report as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__organic_tweet_report\"\n\n),\n\ntweet as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"stg_twitter_organic__tweet\"\n\n), \n\nusers as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"int_twitter_organic__latest_user\"\n    where is_most_recent_record = True\n\n),\n\njoined as (\n\n    select\n        organic_tweet_report.date_day,\n        tweet.organic_tweet_id,\n        tweet.created_timestamp,\n        tweet.tweet_text,\n        tweet.account_id,\n        tweet.post_url,\n        account_history.account_name,\n        users.user_id,\n        users.user_name,\n        tweet.source_relation,\n        sum(organic_tweet_report.app_clicks) as app_clicks,\n        sum(organic_tweet_report.card_engagements) as card_engagements,\n        sum(organic_tweet_report.carousel_swipes) as carousel_swipes,\n        sum(organic_tweet_report.clicks) as clicks,\n        sum(organic_tweet_report.engagements) as engagements,\n        sum(organic_tweet_report.follows) as follows,\n        sum(organic_tweet_report.impressions) as impressions,\n        sum(organic_tweet_report.likes) as likes,\n        sum(organic_tweet_report.poll_card_vote) as poll_card_vote,\n        sum(organic_tweet_report.qualified_impressions) as qualified_impressions,\n        sum(organic_tweet_report.replies) as replies,\n        sum(organic_tweet_report.retweets) as retweets,\n        sum(organic_tweet_report.unfollows) as unfollows,\n        sum(organic_tweet_report.url_clicks) as url_clicks,\n        sum(organic_tweet_report.video_15_s_views) as video_15_s_views,\n        sum(organic_tweet_report.video_3_s_100_pct_views) as video_3_s_100_pct_views,\n        sum(organic_tweet_report.video_6_s_views) as video_6_s_views,\n        sum(organic_tweet_report.video_content_starts) as video_content_starts,\n        sum(organic_tweet_report.video_cta_clicks) as video_cta_clicks,\n        sum(organic_tweet_report.video_total_views) as video_total_views,\n        sum(organic_tweet_report.video_views_100) as video_views_100,\n        sum(organic_tweet_report.video_views_25) as video_views_25,\n        sum(organic_tweet_report.video_views_50) as video_views_50,\n        sum(organic_tweet_report.video_views_75) as video_views_75\n    from tweet\n    left join account_history\n        on tweet.account_id = account_history.account_id\n        and tweet.source_relation = account_history.source_relation\n    left join organic_tweet_report\n        on tweet.organic_tweet_id = organic_tweet_report.organic_tweet_id\n        and tweet.source_relation = organic_tweet_report.source_relation\n    left join users\n        on tweet.user_id = users.user_id\n        and tweet.source_relation = users.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10\n\n)\n\nselect *\nfrom joined", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"twitter_organic__tweets\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.843376Z", "completed_at": "2024-08-20T15:04:47.850651Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.850908Z", "completed_at": "2024-08-20T15:04:47.850915Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008558273315429688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.social_media_reporting.social_media_reporting__twitter_posts_reporting", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"twitter_organic__tweets\"\n\n), fields as (\n\n    select        \n        created_timestamp,\n        cast(organic_tweet_id as TEXT) as  post_id,\n        tweet_text as post_message,\n        account_id as page_id,\n        account_name as page_name,\n        post_url,\n        source_relation,\n        'twitter' as platform,\n        coalesce(sum(clicks),0) as clicks,\n        coalesce(sum(impressions),0) as impressions,\n        coalesce(sum(likes),0) as likes,\n        coalesce(sum(retweets),0) as shares,\n        coalesce(sum(replies),0) as comments\n    from report\n    group by 1,2,3,4,5,6,7,8\n\n)\n\nselect *\nfrom fields", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__twitter_posts_reporting\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.846333Z", "completed_at": "2024-08-20T15:04:47.851280Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:47.851636Z", "completed_at": "2024-08-20T15:04:47.851639Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009003162384033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.twitter_organic.dbt_utils_unique_combination_of_columns_twitter_organic__tweets_date_day__organic_tweet_id__source_relation.b4415b6f20", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        date_day, organic_tweet_id, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"twitter_organic__tweets\"\n    group by date_day, organic_tweet_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:47.852644Z", "completed_at": "2024-08-20T15:04:48.217131Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:48.217368Z", "completed_at": "2024-08-20T15:04:48.217376Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.38880372047424316, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.social_media_reporting.social_media_reporting__rollup_report", "compiled": true, "compiled_code": "with unioned as (\n\n    \n\n        (\n            select\n                cast('\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__twitter_posts_reporting\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"created_timestamp\" as timestamp without time zone) as \"created_timestamp\" ,\n                    cast(\"post_id\" as text) as \"post_id\" ,\n                    cast(\"post_message\" as text) as \"post_message\" ,\n                    cast(\"page_id\" as text) as \"page_id\" ,\n                    cast(\"page_name\" as text) as \"page_name\" ,\n                    cast(\"post_url\" as text) as \"post_url\" ,\n                    cast(\"source_relation\" as text) as \"source_relation\" ,\n                    cast(\"platform\" as text) as \"platform\" ,\n                    cast(\"clicks\" as numeric) as \"clicks\" ,\n                    cast(\"impressions\" as numeric) as \"impressions\" ,\n                    cast(\"likes\" as numeric) as \"likes\" ,\n                    cast(\"shares\" as numeric) as \"shares\" ,\n                    cast(\"comments\" as numeric) as \"comments\" \n\n            from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__twitter_posts_reporting\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__facebook_posts_reporting\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"created_timestamp\" as timestamp without time zone) as \"created_timestamp\" ,\n                    cast(\"post_id\" as text) as \"post_id\" ,\n                    cast(\"post_message\" as text) as \"post_message\" ,\n                    cast(\"page_id\" as text) as \"page_id\" ,\n                    cast(\"page_name\" as text) as \"page_name\" ,\n                    cast(\"post_url\" as text) as \"post_url\" ,\n                    cast(\"source_relation\" as text) as \"source_relation\" ,\n                    cast(\"platform\" as text) as \"platform\" ,\n                    cast(\"clicks\" as numeric) as \"clicks\" ,\n                    cast(\"impressions\" as numeric) as \"impressions\" ,\n                    cast(\"likes\" as numeric) as \"likes\" ,\n                    cast(null as numeric) as \"shares\" ,\n                    cast(null as numeric) as \"comments\" \n\n            from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__facebook_posts_reporting\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__linkedin_posts_reporting\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"created_timestamp\" as timestamp without time zone) as \"created_timestamp\" ,\n                    cast(\"post_id\" as text) as \"post_id\" ,\n                    cast(\"post_message\" as text) as \"post_message\" ,\n                    cast(\"page_id\" as text) as \"page_id\" ,\n                    cast(\"page_name\" as text) as \"page_name\" ,\n                    cast(\"post_url\" as text) as \"post_url\" ,\n                    cast(\"source_relation\" as text) as \"source_relation\" ,\n                    cast(\"platform\" as text) as \"platform\" ,\n                    cast(\"clicks\" as numeric) as \"clicks\" ,\n                    cast(\"impressions\" as numeric) as \"impressions\" ,\n                    cast(\"likes\" as numeric) as \"likes\" ,\n                    cast(\"shares\" as numeric) as \"shares\" ,\n                    cast(\"comments\" as numeric) as \"comments\" \n\n            from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__linkedin_posts_reporting\"\n\n            \n        )\n\n        union all\n        \n\n        (\n            select\n                cast('\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__instagram_posts_reporting\"' as TEXT) as _dbt_source_relation,\n\n                \n                    cast(\"created_timestamp\" as timestamp without time zone) as \"created_timestamp\" ,\n                    cast(\"post_id\" as text) as \"post_id\" ,\n                    cast(\"post_message\" as text) as \"post_message\" ,\n                    cast(\"page_id\" as text) as \"page_id\" ,\n                    cast(\"page_name\" as text) as \"page_name\" ,\n                    cast(\"post_url\" as text) as \"post_url\" ,\n                    cast(\"source_relation\" as text) as \"source_relation\" ,\n                    cast(\"platform\" as text) as \"platform\" ,\n                    cast(null as numeric) as \"clicks\" ,\n                    cast(\"impressions\" as numeric) as \"impressions\" ,\n                    cast(\"likes\" as numeric) as \"likes\" ,\n                    cast(null as numeric) as \"shares\" ,\n                    cast(\"comments\" as numeric) as \"comments\" \n\n            from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__instagram_posts_reporting\"\n\n            \n        )\n\n        \n\n)\n\nselect *\nfrom unioned", "relation_name": "\"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__rollup_report\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-20T15:04:48.242259Z", "completed_at": "2024-08-20T15:04:48.245817Z"}, {"name": "execute", "started_at": "2024-08-20T15:04:48.246099Z", "completed_at": "2024-08-20T15:04:48.246104Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004360198974609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.social_media_reporting.dbt_utils_unique_combination_of_columns_social_media_reporting__rollup_report_post_id__platform__source_relation.9985a561ef", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        post_id, platform, source_relation\n    from \"postgres\".\"social_media_rollup_integration_tests_1_social_media_dev\".\"social_media_reporting__rollup_report\"\n    group by post_id, platform, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 3.5598440170288086, "args": {"populate_cache": true, "log_format_file": "debug", "macro_debugging": false, "exclude": [], "warn_error_options": {"include": [], "exclude": []}, "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/twitter_organic/dbt_social_media_reporting/integration_tests/logs", "use_colors": true, "partial_parse": true, "target": "postgres", "version_check": true, "log_level_file": "debug", "printer_width": 80, "source_freshness_run_project_hooks": false, "strict_mode": false, "require_explicit_package_overrides_for_builtin_materializations": true, "vars": {}, "print": true, "indirect_selection": "eager", "require_resource_names_without_spaces": false, "compile": true, "select": [], "cache_selected_only": false, "partial_parse_file_diff": true, "write_json": true, "send_anonymous_usage_stats": true, "use_colors_file": true, "empty_catalog": false, "which": "generate", "enable_legacy_logger": false, "introspect": true, "profiles_dir": "/Users/joseph.markiewicz/.dbt", "invocation_command": "dbt docs generate -t postgres", "quiet": false, "log_level": "info", "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/twitter_organic/dbt_social_media_reporting/integration_tests", "static_parser": true, "log_format": "default", "log_file_max_bytes": 10485760, "favor_state": false, "defer": false, "static": false, "show_resource_report": false}}